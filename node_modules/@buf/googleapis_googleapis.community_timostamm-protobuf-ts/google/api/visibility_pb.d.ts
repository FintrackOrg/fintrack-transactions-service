/* eslint-disable */
// @generated by protobuf-ts 2.8.2 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "google/api/visibility.proto" (package "google.api", syntax proto3)
// tslint:disable
// @ts-nocheck
//
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { MessageType } from "@protobuf-ts/runtime";
/**
 * `Visibility` restricts service consumer's access to service elements,
 * such as whether an application can call a visibility-restricted method.
 * The restriction is expressed by applying visibility labels on service
 * elements. The visibility labels are elsewhere linked to service consumers.
 *
 * A service can define multiple visibility labels, but a service consumer
 * should be granted at most one visibility label. Multiple visibility
 * labels for a single service consumer are not supported.
 *
 * If an element and all its parents have no visibility label, its visibility
 * is unconditionally granted.
 *
 * Example:
 *
 *     visibility:
 *       rules:
 *       - selector: google.calendar.Calendar.EnhancedSearch
 *         restriction: PREVIEW
 *       - selector: google.calendar.Calendar.Delegate
 *         restriction: INTERNAL
 *
 * Here, all methods are publicly visible except for the restricted methods
 * EnhancedSearch and Delegate.
 *
 * @generated from protobuf message google.api.Visibility
 */
export interface Visibility {
    /**
     * A list of visibility rules that apply to individual API elements.
     *
     * **NOTE:** All service configuration rules follow "last one wins" order.
     *
     * @generated from protobuf field: repeated google.api.VisibilityRule rules = 1;
     */
    rules: VisibilityRule[];
}
/**
 * A visibility rule provides visibility configuration for an individual API
 * element.
 *
 * @generated from protobuf message google.api.VisibilityRule
 */
export interface VisibilityRule {
    /**
     * Selects methods, messages, fields, enums, etc. to which this rule applies.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax
     * details.
     *
     * @generated from protobuf field: string selector = 1;
     */
    selector: string;
    /**
     * A comma-separated list of visibility labels that apply to the `selector`.
     * Any of the listed labels can be used to grant the visibility.
     *
     * If a rule has multiple labels, removing one of the labels but not all of
     * them can break clients.
     *
     * Example:
     *
     *     visibility:
     *       rules:
     *       - selector: google.calendar.Calendar.EnhancedSearch
     *         restriction: INTERNAL, PREVIEW
     *
     * Removing INTERNAL from this restriction will break clients that rely on
     * this method and only had access to it through INTERNAL.
     *
     * @generated from protobuf field: string restriction = 2;
     */
    restriction: string;
}
declare class Visibility$Type extends MessageType<Visibility> {
    constructor();
}
/**
 * @generated MessageType for protobuf message google.api.Visibility
 */
export declare const Visibility: Visibility$Type;
declare class VisibilityRule$Type extends MessageType<VisibilityRule> {
    constructor();
}
/**
 * @generated MessageType for protobuf message google.api.VisibilityRule
 */
export declare const VisibilityRule: VisibilityRule$Type;
export {};
