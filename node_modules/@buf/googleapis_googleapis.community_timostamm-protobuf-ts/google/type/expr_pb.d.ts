/* eslint-disable */
// @generated by protobuf-ts 2.8.2 with parameter output_javascript,optimize_code_size,long_type_string,add_pb_suffix,ts_nocheck,eslint_disable
// @generated from protobuf file "google/type/expr.proto" (package "google.type", syntax proto3)
// tslint:disable
// @ts-nocheck
//
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Represents a textual expression in the Common Expression Language (CEL)
 * syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 * are documented at https://github.com/google/cel-spec.
 *
 * Example (Comparison):
 *
 *     title: "Summary size limit"
 *     description: "Determines if a summary is less than 100 chars"
 *     expression: "document.summary.size() < 100"
 *
 * Example (Equality):
 *
 *     title: "Requestor is owner"
 *     description: "Determines if requestor is the document owner"
 *     expression: "document.owner == request.auth.claims.email"
 *
 * Example (Logic):
 *
 *     title: "Public documents"
 *     description: "Determine whether the document should be publicly visible"
 *     expression: "document.type != 'private' && document.type != 'internal'"
 *
 * Example (Data Manipulation):
 *
 *     title: "Notification string"
 *     description: "Create a notification string with a timestamp."
 *     expression: "'New message received at ' + string(document.create_time)"
 *
 * The exact variables and functions that may be referenced within an expression
 * are determined by the service that evaluates it. See the service
 * documentation for additional information.
 *
 * @generated from protobuf message google.type.Expr
 */
export interface Expr {
    /**
     * Textual representation of an expression in Common Expression Language
     * syntax.
     *
     * @generated from protobuf field: string expression = 1;
     */
    expression: string;
    /**
     * Optional. Title for the expression, i.e. a short string describing
     * its purpose. This can be used e.g. in UIs which allow to enter the
     * expression.
     *
     * @generated from protobuf field: string title = 2;
     */
    title: string;
    /**
     * Optional. Description of the expression. This is a longer text which
     * describes the expression, e.g. when hovered over it in a UI.
     *
     * @generated from protobuf field: string description = 3;
     */
    description: string;
    /**
     * Optional. String indicating the location of the expression for error
     * reporting, e.g. a file name and a position in the file.
     *
     * @generated from protobuf field: string location = 4;
     */
    location: string;
}
declare class Expr$Type extends MessageType<Expr> {
    constructor();
}
/**
 * @generated MessageType for protobuf message google.type.Expr
 */
export declare const Expr: Expr$Type;
export {};
